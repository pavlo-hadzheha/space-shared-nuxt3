import { writeFileSync } from 'fs'
import { join as pathJoin } from 'path'
import { inspect as utilInspect } from 'util'
import { NuxtPage } from '@nuxt/schema'
import { camelCase } from 'change-case'

const routeNames = {}
// Parses pages folder and recursively ignores all files placed in /components dirs.
function parseRoutes (routes: NuxtPage[]) {
  for (let i = routes.length - 1; i >= 0; i--) {
    const route = routes[i]
    if (['/_components/', '.ts'].some(ext => route.file.includes(ext))) {
      routes.splice(i, 1)
    } else {
      routeNames[camelCase(route.name)] = route.name
    }

    parseRoutes(route.children)
  }
}

// Builds routes and generates route names
function buildRouter (routes: NuxtPage[]) {
  console.info('Generating routes')
  parseRoutes(routes)
  writeFileSync(
    pathJoin(__dirname, 'route-names.ts'),
    String('// THIS FILE IS AUTOMATICALLY GENERATED\n')
      .concat('// DON\'T CHANGE IT IN ORDER TO MAKE IT PROPERLY WORK!\n')
      .concat(`export const routeNames = ${utilInspect(routeNames, null, 2, false)}`)
      .concat('\n')
  )
  console.info('Warming up vite clients...')
}

export {
  buildRouter
}
